// <copyright file="DSStaticEntityTypeResolver.cs" company="[None]">
//     Copyright (c) Michael DeBinder. All rights reserved.
// </copyright>

namespace DataServices.DataAccess.Data
{
    using System.Collections.Generic;
    using EntityTypes;

    /// <summary>
    /// Implementation of the entity resolver using hard-coded definitions (rather than pulling from SQL, an XML file, etc.).
    /// This is generated by code from the MetaData stored in the database.
    /// </summary>
    public class StaticEntityTypeResolver : IDSEntityTypeResolver
    {
        /// <summary>
        /// Storage for the list of all available types.
        /// </summary>
        private List<string> _types = new List<string>
        {
            "AppealTracking",
            "Branch",
            "Co",
            "Payor",
            "Person",
            "Patient",
            "PtPayor"
        };

        /// <summary>
        /// Gets the list of all available types.
        /// </summary>
        /// <returns>The list of all available types.</returns>
        public List<string> Types
        {
            get
            {
                return _types;
            }
        }

        /// <summary>
        /// Gets the entity definition for the supplied name.
        /// </summary>
        /// <param name="name">Name of the entity definition to return.</param>
        /// <returns>Entity definition for the supplied name.</returns>
        public DSEntityType Get(string name)
        {
            switch (name)
            {
                case "Course":
                    return new Course();

                case "Department":
                    return new Department();

                case "Enrollment":
                    return new Enrollment();

                case "Person":
                    return new Person();

                default:
                    return null;
            }
        }
    }
}
